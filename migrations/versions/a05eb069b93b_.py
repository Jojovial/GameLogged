"""empty message

Revision ID: a05eb069b93b
Revises:
Create Date: 2023-07-13 17:28:26.646365

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'a05eb069b93b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('system', sa.Enum('_32X', '_3DO', 'Acorn_Archimedes', 'Acorn_Electron', 'Action_Max', 'Amazon_Luna', 'Amiga', 'Amiga_CD32', 'Amstrad_CPC', 'Amstrad_GX4000', 'Android', 'APF_M1000', 'Apple_II', 'Apple_Arcade', 'Apple_Bandai_Pippin', 'Arcade', 'Arduboy', 'Atari_2600', 'Atari_5200', 'Atari_7800', 'Atari_ST', 'Bally_Astrocade', 'Battle_Net', 'BBC_Micro', 'Beamdog', 'Bethesda_Launcher', 'Big_Fish_Games', 'Blacknut', 'Browser', 'Casio_Loopy', 'Casio_PV_1000', 'Calculator', 'CD_i', 'CD32X', 'Coleco_Adam', 'ColecoVision', 'Commodore_64', 'Commodore_CDTV', 'Commodore_Plus4', 'Commodore_VIC_20', 'Cougar_Boy', 'Desure', 'Discord', 'DOS', 'DotEmu', 'Dragon_32_64', 'Dreamcast', 'DSiWare', 'Ea_Access', 'Emerson_Arcadia_2001', 'Entex_Adeventure_Vision', 'Epic_Games_Launcher', 'Epoch_Super_Cassette_Vision', 'Evercade', 'Fairchild_Channel_F', 'Family_Computer', 'Famicom_Disk_System', 'FM_Towns', 'Fujitsu_Micro_7', 'Gamate', 'Game_And_Watch', 'Game_Gear', 'Game_Boy', 'Game_Boy_Color', 'Game_Body_Advance', 'e_Reader', 'Game_Wave_Family_Entertainment_System', 'GameCube', 'GameFly', 'GamersGate', 'GameStop_PC', 'Games_For_Windows', 'Game_com', 'Genesis_Mega_Drive', 'GetGames', 'Gizmondo', 'GOG_com', 'Google_Stadia', 'GP2x_Wiz', 'Green_Man_Gaming', 'HTC_Vive', 'Humble_Bundle_Store', 'HyperScan', 'IndieCity', 'IndieGala', 'Intellivision', 'Intellivision_Amico', 'iOS', 'iPad', 'iPod', 'iPhone', 'iQue_Player', 'itch_io', 'Jaguar', 'Jaguar_CD', 'LaserActive', 'Linux', 'Lynx', 'Mac', 'Magnavox_Odyssey', 'Master_System', 'Microvision', 'Miscellaneous', 'Mobile', 'MSX', 'N_Gage', 'NEC_PC_6001', 'NEC_PC_6601', 'NEC_PC_8001', 'NEC_PC_8801', 'NEC_PC_9801', 'Neo_Geo', 'Neo_Geo_CD', 'Neo_Geo_Pocket_Color', 'Nintendo_3DS', '_3DS_Downloads', 'Nintendo_DS', 'Nintendo_64', 'Nintendo_64DD', 'Nintendo_Entertainment_System', 'Nintendo_Switch', 'Switch_Downloads', 'Nuon', 'Nuuvem', 'Oculus_Store', 'Odyssey2_Videopac', 'OnLive', 'Origin', 'OUYA', 'Pandora', 'PC', 'PICO_8', 'Pinball', 'Plato', 'Playdate', 'Playdia', 'PlayStation', 'PlayStation_2', 'PlayStation_3', 'PlayStation_4', 'PlayStation_5', 'PlayStation_Mobile', 'PlayStation_Network', 'PlayStation_Now', 'PSOne_Classics', 'PS2_Classics', 'PlayStation_minis', 'PlayStation_Portable', 'PlayStation_Vita', 'PlayStation_VR', 'PlayStation_VR2', 'Plug_and_Play', 'PocketStation', 'Pokémon_Mini', 'R_Zone', 'RCA_Studio_II', 'Rockstar_Games_Launcher', 'Super_A_Can', 'SAM_Coupé', 'Saturn', 'Sega_CD', 'Sega_Pico', 'Sega_SG_1000', 'SHARP_MZ_1500', 'Sharp_X1', 'Sharp_X68000', 'Starpath_Supercharger', 'Steam', 'Super_Nintendo_Entertainment_System', 'SuperGrafx', 'Tapwave_Zodiac', 'THhomas_MO5', 'TI_99_4A', 'Tiger_Handhelds', 'TurboDuO', 'TurboGrafx_16', 'TurboGrafx_CD', 'TRS_80_Color_Computer', 'Prime_Gaming', 'Uplay', 'Vectrex', 'Virtual_Boy', 'Virtual_Console_Wii', 'Virtual_Console_3DS', 'WASM_4', 'Watara_Supervision', 'Wii', 'WiiWare', 'Wii_U', 'Wii_U_Downalods', 'Virtual_Console_Wii_U', 'Windows_Phone_7', 'Windows_Store', 'WonderSwan_Color', 'XaviXPORT', 'Xbox', 'Xbox_360', 'Xbox_Game_Pass', 'Xbox_LIVE_Arcade', 'XNA_Indie_Games', 'Xbox_360_Game_on_Demand', 'Xbox_One', 'Xbox_One_Downloads', 'Xbox_Series_X', 'Zeebo', 'Zune', 'ZX_Spectrum', 'ZX_Soectrum_Next', name='system'), nullable=False),
    sa.Column('region', sa.Enum('NAM', 'JP', 'PAL', 'CN', 'KR', 'BR', 'OTHER', name='region'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('comment_text', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Enum('Unplayed', 'Unfinished', 'Beaten', 'Completed', name='progress'), nullable=False),
    sa.Column('progress_note', sa.String(length=300), nullable=True),
    sa.Column('is_now_playing', sa.Boolean(), nullable=True),
    sa.Column('wishlist', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('review_text', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory_cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('log_info', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('game_status', sa.Enum('Unplayed', 'Unfinished', 'Beaten', 'Completed', name='gamestatus'), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_comment',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'comment_id')
    )
    op.create_table('user_entry',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'entry_id')
    )
    op.create_table('user_review',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'review_id')
    )
    # ### end Alembic commands ###
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE games SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE comments SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE entries SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE memory_cards SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE statuses SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE user_comment SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE user_entry SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE user_review SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_review')
    op.drop_table('user_entry')
    op.drop_table('user_comment')
    op.drop_table('statuses')
    op.drop_table('memory_cards')
    op.drop_table('reviews')
    op.drop_table('entries')
    op.drop_table('comments')
    op.drop_table('users')
    op.drop_table('games')
    # ### end Alembic commands ###
